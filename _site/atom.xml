<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Jack Kinsella</title>
 <link href="http://www.jackinsella.ie/atom.xml" rel="self"/>
 <link href="http://www.jackkinsella.ie/"/>
 <updated>2011-09-04T22:46:41+01:00</updated>
 <id>http://www.jackkinsella.ie/</id>
 <author>
   <name>Jack Kinsella</name>
 </author>

 
 <entry>
   <title>Textmate to VIM</title>
   <link href="http://www.jackkinsella.ie/2011/09/05/textmate-to-vim.html"/>
   <updated>2011-09-05T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2011/09/05/textmate-to-vim</id>
   <content type="html">&lt;p&gt;When I switched from Textmate to &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; I felt like a tourist lost on a Japanse subway without a guide, translator or hope. My mind hurt and my calm faded as the week wore on, and I was never able to find in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; the features of Textmate I&amp;#8217;d learned to love and relied on during the previous two years. I longer after &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + T to summon my models and a project drawer to rename my files, and I prayed to Allah for a search and replace dialogue box. Instead of answering my please, &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; sat firm and unresponsive and spat errors in my face. Even though I was supposedly going cold turkey on Textmate, I lustily met her night in the smoking area for a guilty nightime edit.&lt;/p&gt;
&lt;p&gt;With time I learned to reproduce nearly every Textmate feature in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;, and then some. This guide isn&amp;#8217;t about the powerful features &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; has over-and-above Textmate; you&amp;#8217;ll figure them out on your own. No, this guide is to help you achieve in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; what you already can using Textmate, only with considerably less pain than I suffered.&lt;/p&gt;
&lt;p&gt;Some preliminary assumptions:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;You&amp;#8217;ve installed &lt;span class=&quot;caps&quot;&gt;MAC&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;: &lt;br /&gt;
&lt;code&gt;brew install macvim&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;You know the basics of &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;. Type vimtutor in your terminal for a tutorial. Further training can be found be referring to the &lt;a href=&quot;#vim_training_resources&quot;&gt;vim training resources below&lt;/a&gt; .&lt;/li&gt;
	&lt;li&gt;You were a poweruser of Textmate keyboard shorcuts.&lt;/li&gt;
	&lt;li&gt;You&amp;#8217;ve installed &lt;a href=&quot;https://github.com/carlhuda/janus&quot;&gt;Janus&lt;/a&gt;, the community maintained distro of plugins and useful configurations for web programmers&lt;/li&gt;
	&lt;li&gt;You have created a ~/.vimrc.local file (for core &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; configurations), ~/.gvimrc.local (for configuring the graphics in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;) and ~/.janus.rake (for adding or removing plugins &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;). See my &lt;a href=&quot;https://github.com/jackkinsella/dotfiles/tree/&quot;&gt;dotfiles&lt;/a&gt; for some commented examples.&lt;/li&gt;
	&lt;li&gt;(Bonus) You are a Rails programmer, as about 30% of this guide is Rails specific.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Format&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Action To Be Completed&lt;/td&gt;
		&lt;td&gt; Shortcut In Textmate &lt;/td&gt;
		&lt;td&gt; Shortcut in Vim&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Opening Up The Editor&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Open project from command line&lt;/td&gt;
		&lt;td&gt; [cd to folder] mate . &lt;/td&gt;
		&lt;td&gt; [cd to folder] mvim . &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Undo / Redo.&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Undo&lt;/td&gt;
		&lt;td&gt;⌘ + Z &lt;/td&gt;
		&lt;td&gt; u &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Redo&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌘ + Z &lt;/td&gt;
		&lt;td&gt; ⌃ + R &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Opening, closing and creating files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Open a file&lt;/td&gt;
		&lt;td&gt; ⌘ + 0 &lt;/td&gt;
		&lt;td&gt; :e &lt;span class=&quot;caps&quot;&gt;FILENAME&lt;/span&gt; (use Tab completion after first few letters) [Save File first]&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Create new file&lt;/td&gt;
		&lt;td&gt; File &amp;gt; new &lt;/td&gt;
		&lt;td&gt; ⌘ + T (new tab); type; :w newfilename &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Saving Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Save file&lt;/td&gt;
		&lt;td&gt; ⌘ + S &lt;/td&gt;
		&lt;td&gt; :w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Save file as&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + S &lt;/td&gt;
		&lt;td&gt; :saveas &lt;span class=&quot;caps&quot;&gt;NEWNAME&lt;/span&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;File renaming&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Rename a file&lt;/td&gt;
		&lt;td&gt;space (whilst focus is on project drawer)&lt;/td&gt;
		&lt;td&gt; Focus On Project Drawer. Select File (search). m (menu appears) m type name of file [enter]. You may need to press r to refresh project drawer (usually happens automatically after a few minutes)&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Project Drawer&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Focus on project drawer&lt;/td&gt;
		&lt;td&gt; ⌃ + &lt;Tab&gt; &lt;/td&gt;
		&lt;td&gt; &lt;Tab&gt; (assuming you&amp;#8217;ve set it up. otherwise &lt;span class=&quot;caps&quot;&gt;CNRL&lt;/span&gt; + W/ ⌃ + W)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Close/Open project drawer&lt;/td&gt;
		&lt;td&gt; ⌃ + ⌥ + ⌘ + D &lt;/td&gt;
		&lt;td&gt;\n&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Change size of project drawer&lt;/td&gt;
		&lt;td&gt; Use mouse to adjust size &lt;/td&gt;
		&lt;td&gt; let NERDTreeWinSize=16 [vimrc] &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Tabs&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;New tab&lt;/td&gt;
		&lt;td&gt; Click On File In Project Drawer &lt;/td&gt;
		&lt;td&gt; ⌘ + Shit + T &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Drop tab&lt;/td&gt;
		&lt;td&gt; ⌃ + w &lt;/td&gt;
		&lt;td&gt; ⌃ + w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch tabs left &lt;/td&gt;
		&lt;td&gt; ⇧ + &lt;span class=&quot;caps&quot;&gt;COMMAND&lt;/span&gt; + [ (left) ] &lt;/td&gt;
		&lt;td&gt; :tabp &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch tabs right &lt;/td&gt;
		&lt;td&gt; ⇧ + &lt;span class=&quot;caps&quot;&gt;COMMAND&lt;/span&gt; + right &lt;/td&gt;
		&lt;td&gt; :tabn &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to tab&lt;/td&gt;
		&lt;td&gt; ⌘[1-9] &lt;/td&gt;
		&lt;td&gt; ⌘;[1-9]&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Running Tests and Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Run tests for given file&lt;/td&gt;
		&lt;td&gt;⌘ + r &lt;/td&gt;
		&lt;td&gt; :Rake &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run current file&lt;/td&gt;
		&lt;td&gt; ⌘ + R &lt;/td&gt;
		&lt;td&gt; No equivalent. Must do it manually. :!ruby % (explanation: :! means execute the following as if on a shell. ruby % expands to &amp;#8216;ruby current_file_name&amp;#8217;) &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Moving Around A File&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to beginning of line&lt;/td&gt;
		&lt;td&gt; ⌃ + A &lt;/td&gt;
		&lt;td&gt; ^ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to end of line &lt;/td&gt;
		&lt;td&gt; ⌃ + E &lt;/td&gt;
		&lt;td&gt; $ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to top of file &lt;/td&gt;
		&lt;td&gt; ⌘ + Up &lt;/td&gt;
		&lt;td&gt; g &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to bottom of file &lt;/td&gt;
		&lt;td&gt; ⌘ + Down &lt;/td&gt;
		&lt;td&gt; GG &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move up one line (with Carret at same position)&lt;/td&gt;
		&lt;td&gt; ⌃ + P &lt;/td&gt;
		&lt;td&gt; k &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move down one line (with Carret at same position)&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CNRL&lt;/span&gt; + N&lt;/td&gt;
		&lt;td&gt; j&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to line&lt;/td&gt;
		&lt;td&gt; ⌘ + L 20 &lt;/td&gt;
		&lt;td&gt; :20 &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Indentation&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Automatically indent code beautifully&lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + B (&lt;a href=&quot;https://github.com/mocoso/code-beautifier.tmbundle&quot;&gt;Code Beautifier Plugin&lt;/a&gt;) &lt;/td&gt;
		&lt;td&gt; gg=G &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Indent&lt;/td&gt;
		&lt;td&gt;⌘ + [ &lt;/td&gt;
		&lt;td&gt; &amp;gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Unindent&lt;/td&gt;
		&lt;td&gt; ⌘ + ] &lt;/td&gt;
		&lt;td&gt; &amp;lt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Font Size, Line Numberings&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Bigger/Smaller Font&lt;/td&gt;
		&lt;td&gt; ⌘ +/- &lt;/td&gt;
		&lt;td&gt; (⌘ +/- doesn&amp;#8217;t work well) set guifont=Monaco:h18 [place in ~/gvimrc.local] (replace 18 with desired font-size) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Line numbering&lt;/td&gt;
		&lt;td&gt; Menu Command &lt;/td&gt;
		&lt;td&gt; :set number (on) :set nonumber (off). Note the symmetry. This is the same for all &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; commands&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Spell Checking&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Highlight incorrect spellings&lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + ; &lt;/td&gt;
		&lt;td&gt; :set spell &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Next incorrect spelling &lt;/td&gt;
		&lt;td&gt; ⌘ + : &lt;/td&gt;
		&lt;td&gt; ] s (opposite directino with [s) &amp;#8211; assumes spell checking is enabled &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Ruby On Rails&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Call RoR generate script &lt;/td&gt;
		&lt;td&gt; &amp;quot;⌃ + Pipe [1..8]== &lt;/td&gt;
		&lt;td&gt;:Rgenerate [⌃ler model scaffold] Blog &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go To Last Migration&lt;/td&gt;
		&lt;td&gt; None &lt;/td&gt;
		&lt;td&gt; :Rmig  &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run migrations&lt;/td&gt;
		&lt;td&gt; ⌃ + ⇧ + Pipe &lt;/td&gt;
		&lt;td&gt;:Rmigrate &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch focus to project drawer&lt;/td&gt;
		&lt;td&gt; ⌘ + ⌥ + ` (check)&lt;/td&gt;
		&lt;td&gt; &amp;lt;⌃&amp;gt; + w &amp;lt;⌃&amp;gt; + w OR &lt;span class=&quot;caps&quot;&gt;VIMRC&lt;/span&gt; noremap &lt;tab&gt; &lt;C-w&gt;&lt;C-w&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Insert erb&amp;#8217;s &amp;lt;%= &lt;/td&gt;
		&lt;td&gt; ⌃ + ⇧ + . &lt;/td&gt;
		&lt;td&gt; yss= (after text on screen type this to surround line with tags) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Insert erb&amp;#8217;s &amp;lt;% &lt;/td&gt;
		&lt;td&gt; ⌃ + &lt;span class=&quot;caps&quot;&gt;SHIT&lt;/span&gt; + . (cycle through )&lt;/td&gt;
		&lt;td&gt; yss- &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run unit test caret inside of &lt;/td&gt;
		&lt;td&gt; ⇧ + ⌘ + R &lt;/td&gt;
		&lt;td&gt; :.Rake (. here represent current line. Substitute for other lines) &lt;span class=&quot;caps&quot;&gt;TEST&lt;/span&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to test file (e.g. from user.rb to user_spec.rb)&lt;/td&gt;
		&lt;td&gt; ⌥ + &lt;span class=&quot;caps&quot;&gt;SHIT&lt;/span&gt; + ⌘ + &lt;span class=&quot;caps&quot;&gt;DOWN&lt;/span&gt; &lt;/td&gt;
		&lt;td&gt; :A (:AV in a new split, :AT new tab)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Find related file&lt;/td&gt;
		&lt;td&gt; ⌥-⌘-down &lt;/td&gt;
		&lt;td&gt; R (If typed in ⌃ler &amp;#8594; View(of method selected); If typed in view &amp;#8594; Controller; Migrations &amp;#8594; Next Migration (:A previous migration))&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Bookmarks&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Add bookmark&lt;/td&gt;
		&lt;td&gt; ⌘ + F2 (Never worked on my mac) &lt;/td&gt;
		&lt;td&gt; m[a-z] (this letter refers to this bookmark) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump to bookmark&lt;/td&gt;
		&lt;td&gt; F2 (next) + F2 (previosu) &lt;/td&gt;
		&lt;td&gt; &amp;#8217;a (:marks to sell all marks)&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Searching Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Search file downwards&lt;/td&gt;
		&lt;td&gt;&lt;code&gt;&amp;lt;⌃&amp;gt; + S then type method name&lt;/code&gt;&lt;/td&gt;
		&lt;td&gt;&lt;code&gt;/def donught&lt;/code&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search file upwards &lt;/td&gt;
		&lt;td&gt; ⇧ + ⌃ + S THING_SEARCHING_FOR &lt;/td&gt;
		&lt;td&gt; ?THING_SEARCHING_FOR &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Full screen &lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://github.com/enormego/EGOTextMateFullScreen&quot;&gt;(Lion Only)&lt;/a&gt; &lt;/td&gt;
		&lt;td&gt; ⌘ + Enter &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search entire project &lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + F (grep) &lt;/td&gt;
		&lt;td&gt; ,a THING_SEARCHING_FOR (ack) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Find a specific Method&lt;/td&gt;
		&lt;td&gt;⌘ + ⇧ + t&lt;/td&gt;
		&lt;td&gt; /def first_letters_of_method_name OR *(while carret of method name to cycle instances of that method in file)&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Replacing Text in Files and Project&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file&lt;/td&gt;
		&lt;td&gt; ⌘ F (Find and Replace Dialogue) Replace All &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/g &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file, ignoring case &lt;/td&gt;
		&lt;td&gt; ⌘ F (Find and Replace Dialogue) Select &amp;#8216;Ignroe Case&amp;#8217;. Replace All &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/gi &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file, confirming each time &lt;/td&gt;
		&lt;td&gt; ⌘ F (Find and Replace Dialogue) Replace Next &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/gc &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in entire project&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + F &lt;/td&gt;
		&lt;td&gt; (Save first if issues) ,a donut[Enter]. A window pops up with all instances of the term. &lt;Tab&gt; into the ack search window. Type :bufdo %s/donut/eclair/gce. :q the ack search window once down to close it. &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in entire project&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + F &lt;/td&gt;
		&lt;td&gt; ,a donut[Enter] &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Uppercase/Lowercase (&lt;span class=&quot;caps&quot;&gt;UNFIN&lt;/span&gt;)&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Upcase selected text&lt;/td&gt;
		&lt;td&gt;⌃ + ⇧ + U&lt;/td&gt;
		&lt;td&gt; ~ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Downcase selected text&lt;/td&gt;
		&lt;td&gt;⌃ + ⇧ + U&lt;/td&gt;
		&lt;td&gt; ~ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Titlecase urrent text&lt;/td&gt;
		&lt;td&gt; ⌃ + &lt;span class=&quot;caps&quot;&gt;OPTION&lt;/span&gt; + U &lt;/td&gt;
		&lt;td&gt; No equivalent. For current line you can use :s :s/\&amp;lt;\(\w\)\(\w*\)\&amp;gt;/\u\1\L\2/g &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Autocomplete&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Autocomplete method&lt;/td&gt;
		&lt;td&gt; ⎋ after typing first few letters&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;TAB&lt;/span&gt; after typing first few letters&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Autocomplete filename&lt;/td&gt;
		&lt;td&gt; Not possible &lt;/td&gt;
		&lt;td&gt; ⌃ + X ⌃ + F (repeat for each directory)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Autocomplete full line of code &lt;/td&gt;
		&lt;td&gt; Not possible &lt;/td&gt;
		&lt;td&gt; ⌃ + X ⌃ + L &lt;/td&gt;
&lt;/table&gt;
&lt;h2&gt;Commeting&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Comment Line or Selection&lt;/td&gt;
		&lt;td&gt; ⌘ + / &lt;/td&gt;
		&lt;td&gt; ⌘ + / &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Deletion&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Delete line&lt;/td&gt;
		&lt;td&gt;⌘ + ⇧ + k &lt;/td&gt;
		&lt;td&gt; dd &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Syntax Errors&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Check for syntax errors on saving (*life saver)&lt;/td&gt;
		&lt;td&gt; &lt;a href=&quot;https://github.com/sxtxixtxcxh/validate-on-save.tmbundle&quot;&gt;Validate On Save Plugin&lt;/a&gt; &lt;/td&gt;
		&lt;td&gt; Built In (A grey bar appears right of the number column with an &amp;gt; beside the error) &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Autoclosing &amp;quot;&amp;quot; () or &lt;span class=&quot;caps&quot;&gt;HTML&lt;/span&gt; tags&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Add opposing bracket or quotation mark&lt;/td&gt;
		&lt;td&gt; Typing a &amp;quot; will automatically add in closing. &lt;/td&gt;
		&lt;td&gt; Add &lt;a href=&quot;https://gist.github.com/1193298&quot;&gt;this gist&lt;/a&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Close current html tag&lt;/td&gt;
		&lt;td&gt;⌘ + ⌥ + .&lt;/td&gt;
		&lt;td&gt; vim_plugin_task &amp;#8220;ragtag&amp;#8221;, &amp;#8220;git://github.com/tpope/vim-ragtag.git&amp;#8221; p &lt;span class=&quot;caps&quot;&gt;CNRL&lt;/span&gt; + X Space &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; Colours&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;View &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; colour wheel&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + C &lt;/td&gt;
		&lt;td&gt; No exact equivalent.  vim_plugin_task &amp;#8220;vim-css-color&amp;#8221;, &amp;#8216;git://github.com/skammer/vim-css-color.git&amp;#8217; turns #acbdef into its correct colour&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump between words left&lt;/td&gt;
		&lt;td&gt; ⌥ + Left &lt;/td&gt;
		&lt;td&gt; w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump between words right&lt;/td&gt;
		&lt;td&gt; ⌥ + Right &lt;/td&gt;
		&lt;td&gt; b &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Selecting Text&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Select all&lt;/td&gt;
		&lt;td&gt; ⌘ + A &lt;/td&gt;
		&lt;td&gt; vgg=G &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Increase selection left one word&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌥ + Left then alt + left for each additional word&lt;/td&gt;
		&lt;td&gt; v(select)w then w for each additional word  &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Select a vertical block&lt;/td&gt;
		&lt;td&gt; ⌥ + drag mouse &lt;/td&gt;
		&lt;td&gt; ⌃ + V &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Moving Text Around&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Move selected text up&lt;/td&gt;
		&lt;td&gt;⌃ + ⌘ + up (or down)&lt;/td&gt;
		&lt;td&gt; :m 22 (moves current line to line 22. Easier if line numbers are on with :set number ). ⌥ernativly :m+ or :m+N or :m-N for moving 1 or N lines up or down&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Merge current line With Next Line&lt;/td&gt;
		&lt;td&gt;⌃+⇧+J &lt;/td&gt;
		&lt;td&gt; J &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Sort lines&lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + R &amp;gt; sort in dialogue box &lt;/td&gt;
		&lt;td&gt; [Text selected] !:sort OR [Text Not Selected] :0,$!sort (0,$ is a range representing whole file) &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Clipboard&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Copy&lt;/td&gt;
		&lt;td&gt; ⌘ + C&lt;/td&gt;
		&lt;td&gt; Y(copy current selection, or line if nothing selected) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Cut&lt;/td&gt;
		&lt;td&gt; ⌘ + X &lt;/td&gt;
		&lt;td&gt; d(deleted selection, but deleting in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; sends it to a register where it can be pasted with p)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Paste&lt;/td&gt;
		&lt;td&gt; ⌘ + V &lt;/td&gt;
		&lt;td&gt; p(paste below current line) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Clipboard history&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + V &lt;/td&gt;
		&lt;td&gt; :reg (see a list of registers each of which can be pasted e.g. &amp;quot;8p) &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Duplicating Lines&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Duplicate line/selection&lt;/td&gt;
		&lt;td&gt; ⌃-⇧-D&lt;/td&gt;
		&lt;td&gt; Yp (y copies line then p pastes in below) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Add placeholder text&lt;/td&gt;
		&lt;td&gt;lorem + tab&lt;/td&gt;
		&lt;td&gt; No Equivalent &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Edit ends of selected lines&lt;/td&gt;
		&lt;td&gt;⌘+opt+a&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Wrap selected text in P tags&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌃ + W &lt;/td&gt;
		&lt;td&gt; ystp &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Snippets (e.g. validates present of)&lt;/td&gt;
		&lt;td&gt; vp&lt;Tab&gt; &lt;/td&gt;
		&lt;td&gt; Currently clashes with Command-T since both use T. I&amp;#8217;ve filed numerous but reports. If anyone has fixed this let me know. &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id=&quot;vim_training_resources&quot;&gt;Recommended Resources For Learning Basic Vim&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Remember the key is to train your fingers. Don&amp;#8217;t read the commands. Open up a blank file and try out different commands.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.derekwyatt.org/vim/vim-tutorial-videos/&quot; title=&quot;Highly recommended, if you can tolerate his excitement&quot;&gt;Derek Wyatt&amp;#8217;s Video Series&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://alfmikula.blogspot.com/2010/11/using-spaced-repetition-software-to.html&quot; title=&quot;My Personal Favourite&quot;&gt;Spaced Reptition Systems For Drilling&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html&quot;&gt;Visual Cheat Sheets&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://peepcode.com/products/smash-into-vim-i&quot; title=&quot;Commercial&quot;&gt;PeepCode&amp;#8217;s Video Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 
</feed>
