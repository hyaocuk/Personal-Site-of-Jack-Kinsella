<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Jack Kinsella</title>
 <link href="http://www.jackinsella.ie/atom.xml" rel="self"/>
 <link href="http://www.jackkinsella.ie/"/>
 <updated>2011-09-08T00:55:29+01:00</updated>
 <id>http://www.jackkinsella.ie/</id>
 <author>
   <name>Jack Kinsella</name>
 </author>
 
 <entry>
   <title>Textmate to VIM</title>
   <link href="http://www.jackkinsella.ie/2011/09/05/textmate-to-vim.html"/>
   <updated>2011-09-05T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2011/09/05/textmate-to-vim</id>
   <content type="html">&lt;p&gt;When I switched from Textmate to &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; I felt like a tourist lost on a Japanese subway without a guide, translator or hope. I was unable to find in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; the features I&amp;#8217;d come to love and rely on in Textmate. I yearned for ⌘ + T to summon my models, a project drawer to manage my files, and snippets to save my fingers.&lt;/p&gt;
&lt;p&gt;Instead of accommodating my needs, &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; sat firm and unresponsive, save for a judgemental beep. Even though I was supposed to go cold turkey on Textmate, I met her by night for a guilty after-hours edit.&lt;/p&gt;
&lt;p&gt;With time I learned to mimic nearly every Textmate feature in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;, and then some. This guide isn&amp;#8217;t about the powerful functionality &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; has over-and-above Textmate; you&amp;#8217;ll figure this out with time. This guide is to help you do in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; what you already can using Textmate, only with considerably less pain than I underwent.&lt;/p&gt;
&lt;p&gt;This guide makes a few assumptions:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;You are using a Mac.&lt;/li&gt;
	&lt;li&gt;You&amp;#8217;ve installed Mac &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;. The easiest way is using Home Brew. &lt;br /&gt;
&lt;code&gt;brew install macvim&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;You&amp;#8217;ve installed &lt;a href=&quot;https://github.com/carlhuda/janus&quot;&gt;Janus&lt;/a&gt;, the community maintained &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; distro with plugins and configurations useful to Rails programmers accustomed to Textmate.&lt;/li&gt;
	&lt;li&gt;You&amp;#8217;ve created a ~/.vimrc.local file (for core &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; configurations), ~/.gvimrc.local (for configuring the graphics in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;) and ~/.janus.rake (for adding or removing plugins in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;). See my &lt;a href=&quot;https://github.com/jackkinsella/dotfiles/tree/&quot;&gt;dotfiles&lt;/a&gt; for some commented examples. Better yet, use them as sensible defaults.&lt;/li&gt;
	&lt;li&gt;You&amp;#8217;ve already learned the basics of &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;. If you haven&amp;#8217;t type vimtutor in your terminal for a 20 minute tutorial. Advanced training can be found be referring to the &lt;a href=&quot;#vim_training_resources&quot;&gt;vim training resources&lt;/a&gt; below.&lt;/li&gt;
	&lt;li&gt;You were a power user of Textmate.&lt;/li&gt;
	&lt;li&gt;You are a Rails programmer switching from Textmate to &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;. About 30% of this guide is Rails specific.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;This guide may only be reproduced with the express permission of Jack Kinsella &amp;#8211; &lt;a href=&quot;/rails-developer-london.html&quot;&gt;Rails Developer, London&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Some Preliminary Notes (Do Not Skip)&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Command &lt;/td&gt;
		&lt;td&gt; Shortcut in Textmate &lt;/td&gt;
		&lt;td&gt; Shortcut in Vim&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;ul&gt;
	&lt;li&gt;In general the keyboard shortcuts in Textmate require you to press the keys at the same time. Below, this is symbolised by a +. VIM&amp;#8217;s shortcuts, by contrast, typically require you to press the keys in quick succession, rather than at the same time. If you see &amp;#8216;dd&amp;#8217; this means type d twice.&lt;/li&gt;
	&lt;li&gt;Whilst commands in Textmate are &lt;em&gt;case insensitive&lt;/em&gt;, or rather the shift key is specified in the commands below, the commands in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; are &lt;em&gt;case sensitive&lt;/em&gt;. If I tell you to type Y then typing y will not suffice.&lt;/li&gt;
	&lt;li&gt;Unless otherwise specified, all the &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; commands assume you are in normal mode, the mode where you cannot type text into the file.&lt;/li&gt;
	&lt;li&gt;If I instruct you to add something to your vimrc.local or gvimrc.local files you will need to type :source ~/.vimrc.local or :source .gvimrc.local to reload &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; with your changes.&lt;/li&gt;
	&lt;li&gt;If I instruct you to add code to your .janus.rake file, you must cd into your ~/.vim directory and run rake for these changes to be installed.&lt;/li&gt;
	&lt;li&gt;Regular expressions in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; differ from those in Textmate, and these are outside the scope of this guide. 90% of these differences will be alleviated if you add this to your .vimrc.local:&lt;br /&gt;
&lt;code&gt;nnoremap / /\v&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;vnoremap / /\v&lt;/code&gt;&lt;br /&gt;
&lt;em&gt;This automaticaly prefixes your search commands with \v (Technically, the commands map the key /, symbolising search, to /\v, meaning search with &amp;#8216;very magic&amp;#8217; regex syntax. There are two entries since the remapping happens in two modes.). &amp;#8216;Very magic&amp;#8217; regex syntax means that all &lt;span class=&quot;caps&quot;&gt;ASCII&lt;/span&gt; characters except &amp;#8216;0&amp;#8217;-&amp;#8216;9&amp;#8217;, &amp;#8216;a&amp;#8217;-&amp;#8216;z&amp;#8217;, &amp;#8216;A&amp;#8217;-&amp;#8216;Z&amp;#8217; and &amp;#8216;_&amp;#8217; have a special meaning.  Without this you would need to escape many characters which are standard regex syntax in, say, Ruby.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Opening, Closing and Creating Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Open a file&lt;/td&gt;
		&lt;td&gt; ⌘ + 0 &lt;/td&gt;
		&lt;td&gt; :e &lt;span class=&quot;caps&quot;&gt;FILENAME&lt;/span&gt; &lt;br /&gt;
&lt;em&gt;Use Tab completion after typing the first few letters&lt;/em&gt; &lt;br /&gt;
&lt;em&gt;You may need to save your current file first&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Create new file&lt;/td&gt;
		&lt;td&gt; File &amp;gt; new &lt;/td&gt;
		&lt;td&gt; ⌘ + T (new tab) &lt;br /&gt;
&lt;em&gt;You will be in a new file on a separate tab. Type something and then save with:&lt;/em&gt;&lt;br /&gt;
:w newfilename &lt;br /&gt;
:e new_filename&lt;br /&gt;
&lt;em&gt;Opens a new file in the current window&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Quit&lt;/td&gt;
		&lt;td&gt; ⌘ + q &lt;/td&gt;
		&lt;td&gt; :q &lt;br /&gt;
&lt;em&gt;This throws an error if you have not saved. use :wq to save and quit or :q! to quit without saving&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Open project from command line&lt;/td&gt;
		&lt;td&gt; [cd to folder] mate . &lt;/td&gt;
		&lt;td&gt; [cd to folder] mvim . &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Saving Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Save file&lt;/td&gt;
		&lt;td&gt; ⌘ + S &lt;/td&gt;
		&lt;td&gt; :w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Save file as&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + S &lt;/td&gt;
		&lt;td&gt; :w &lt;span class=&quot;caps&quot;&gt;NEWFILENAME&lt;/span&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Undo / Redo&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Undo&lt;/td&gt;
		&lt;td&gt;⌘ + Z &lt;/td&gt;
		&lt;td&gt; u &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Redo&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌘ + Z &lt;/td&gt;
		&lt;td&gt; ⌃ + R &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;File Renaming&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Rename a file&lt;/td&gt;
		&lt;td&gt; Focus on the project drawer and select a file. Press spacebar. Type a new name. &lt;/td&gt;
		&lt;td&gt; Start by &lt;a href=&quot;#nerd_tree&quot;&gt;focusing on the NERDTree&lt;/a&gt;. Select the file you wish to rename (however you want: e.g. with a search or plain old jklh). Type &amp;#8216;m&amp;#8217; to bring up a menu. Type &amp;#8216;m&amp;#8217; again to chose to modify the file name. Type the new name of file and press enter. &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id=&quot;nerd_tree&quot;&gt;Project Drawer/ NERDTree&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Focus on project drawer&lt;/td&gt;
		&lt;td&gt; ⌃ + &lt;Tab&gt; &lt;/td&gt;
		&lt;td&gt; &lt;a href=&quot;#switch_tabs&quot;&gt;Switch tabs until selected&lt;/a&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Close/Open project drawer&lt;/td&gt;
		&lt;td&gt; ⌃ + ⌥ + ⌘ + D &lt;/td&gt;
		&lt;td&gt;\n&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Change size of project drawer&lt;/td&gt;
		&lt;td&gt; Use mouse to adjust size &lt;/td&gt;
		&lt;td&gt; [add this to your .vimrc] let NERDTreeWinSize=16 &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Create new in Project Drawer &lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + N &lt;/td&gt;
		&lt;td&gt; Select Project Drawer. Highlight parent folder you&amp;#8217;d like file to appear in. Type m the choose a from select menu and type desired filename &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Delete a file&lt;/td&gt;
		&lt;td&gt; Click on file and select &amp;#8220;remove file&amp;#8221; &lt;/td&gt;
		&lt;td&gt; Highlight undesired file file in Project Drawer. Type m then choose d from drop down menu.&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Opening a sub-folder&lt;/td&gt;
		&lt;td&gt; &lt;/td&gt;
		&lt;td&gt;Enter to open/close a directory&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Refresh project tree to reflect newly added files&lt;/td&gt;
		&lt;td&gt;Automatic&lt;/td&gt;
		&lt;td&gt;Nearly always automatic. Otherwise press r&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Clipboard&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Copy&lt;/td&gt;
		&lt;td&gt; ⌘ + C&lt;/td&gt;
		&lt;td&gt; yy&lt;br /&gt;
&lt;em&gt;Copies the current selection, or, if there is no selection, the current line&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Cut&lt;/td&gt;
		&lt;td&gt; ⌘ + X &lt;/td&gt;
		&lt;td&gt; d&lt;br /&gt;
&lt;em&gt;Technically this deletes the selection, but deleting in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; saves the deleted text to a register where it can be now be pasted with p&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Paste&lt;/td&gt;
		&lt;td&gt; ⌘ + V &lt;/td&gt;
		&lt;td&gt; p&lt;br /&gt;
&lt;em&gt;Pastes below the current line&lt;/em&gt; &lt;br /&gt;
P&lt;br /&gt;
&lt;em&gt;pastes above the current line&lt;/em&gt;&lt;br /&gt;
&amp;#8220;0p&lt;br /&gt;
&lt;em&gt;this pastes the last &lt;strong&gt;explicitly copied&lt;/strong&gt; text. this is important since many commands, such as deleting text, override the paste buffer&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Paste from system clipboard&lt;/td&gt;
		&lt;td&gt; As above. &lt;/td&gt;
		&lt;td&gt; &amp;quot;*p&lt;br /&gt;
&lt;em&gt;&lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; distinguishes between its internal clipboards (buffers) and the system&amp;#8217;s clipboard.&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Clipboard history&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + V &lt;/td&gt;
		&lt;td&gt; :reg &lt;br /&gt;
&lt;em&gt;Show a list of registers each of which can be pasted e.g. &amp;quot;8p pastes the contents of the register 8&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id=&quot;switch_tabs&quot;&gt;Tabs&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;New tab&lt;/td&gt;
		&lt;td&gt; Click on file in project drawer &lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + T &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Drop tab&lt;/td&gt;
		&lt;td&gt; ⌃ + w &lt;/td&gt;
		&lt;td&gt; ⌃ + w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch tabs left &lt;/td&gt;
		&lt;td&gt; ⇧ + ⌘ + ←&lt;/td&gt;
		&lt;td&gt; gT &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch tabs right &lt;/td&gt;
		&lt;td&gt; ⇧ + ⌘ + →&lt;/td&gt;
		&lt;td&gt; gt &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to tab&lt;/td&gt;
		&lt;td&gt; ⌘[1-9] &lt;/td&gt;
		&lt;td&gt; ⌘[1-9]&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Moving Around A File&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to beginning of line&lt;/td&gt;
		&lt;td&gt; ⌃ + A &lt;/td&gt;
		&lt;td&gt; ^ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to end of line &lt;/td&gt;
		&lt;td&gt; ⌃ + E &lt;/td&gt;
		&lt;td&gt; $ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to top of file &lt;/td&gt;
		&lt;td&gt; ⌘ + ↑ &lt;/td&gt;
		&lt;td&gt; gg &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to bottom of file &lt;/td&gt;
		&lt;td&gt; ⌘ + ↓ &lt;/td&gt;
		&lt;td&gt; G &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move up one line (with caret at same position)&lt;/td&gt;
		&lt;td&gt; ⌃ + P &lt;/td&gt;
		&lt;td&gt; k &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move down one line (with caret at same position)&lt;/td&gt;
		&lt;td&gt; ⌃ + N&lt;/td&gt;
		&lt;td&gt; j&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to line 20 &lt;/td&gt;
		&lt;td&gt; ⌘ + L [type a line &amp;#8211; e.g. 20] &lt;/td&gt;
		&lt;td&gt; :20 &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump between words left&lt;/td&gt;
		&lt;td&gt; ⌥ + ← w &lt;/td&gt;
		&lt;td&gt; b or B &lt;br /&gt;
&lt;em&gt;Lowercase b goes back one word, where puntuation marks count as word separators. B is back one word where only spaces count as word separators.&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump between words right&lt;/td&gt;
		&lt;td&gt; ⌥ + →&lt;/td&gt;
		&lt;td&gt; w or W &lt;br /&gt;
&lt;em&gt;same distinction as above&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Selecting Text&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt; Begin selection &lt;/td&gt;
		&lt;td&gt; ⇧ [then use arrows to drag over desired text] &lt;/td&gt;
		&lt;td&gt; v[enters visual mode. use w to move forward one word. ) to move forward one sentence and % to move to next bracket close. also /apple to move forward to next occurrence of apple]&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Select all&lt;/td&gt;
		&lt;td&gt; ⌘ + A &lt;/td&gt;
		&lt;td&gt; ggVG &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Increase selection left one word&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌥ + ← then alt + ← for each additional word&lt;/td&gt;
		&lt;td&gt; v(select)w then w for each additional word  &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Select a vertical block&lt;/td&gt;
		&lt;td&gt; ⌥ + drag mouse &lt;/td&gt;
		&lt;td&gt; ⌃ + V &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Deleting Text&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Delete line&lt;/td&gt;
		&lt;td&gt;⌘ + ⇧ + k &lt;/td&gt;
		&lt;td&gt; dd &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Delete character&lt;/td&gt;
		&lt;td&gt; Backspace &lt;em&gt;Erases character to the left of the caret&lt;/em&gt; &lt;/td&gt;
		&lt;td&gt;x &lt;br /&gt;
&lt;em&gt;Erases character under caret&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Delete selected text&lt;/td&gt;
		&lt;td&gt; Backspace &lt;/td&gt;
		&lt;td&gt; d &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Moving Text Around&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Move selected text up&lt;/td&gt;
		&lt;td&gt;⌃ + ⌘ + ↑ (or ↓)&lt;/td&gt;
		&lt;td&gt; :m 22 &lt;br /&gt;
&lt;em&gt;moves current line to line 22. Easier if line numbers are on with :set number. Alternatively :m+ or :m+N or :m-N for moving 1 or N lines up or down&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Merge current line With Next Line&lt;/td&gt;
		&lt;td&gt;⌃ + ⇧ +J &lt;/td&gt;
		&lt;td&gt; J &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Sort lines&lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + R &amp;gt; sort in dialogue box &lt;/td&gt;
		&lt;td&gt; &lt;em&gt;Where you have previously selected text&lt;/em&gt;&lt;br /&gt;
!:sort &lt;br /&gt;
&lt;em&gt;Where you have nothing selecting and want to act on whole file&lt;/em&gt;&lt;br /&gt;
:%!sort (% is a symbol representing the whole file) &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Searching Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Search file downwards for &lt;span class=&quot;caps&quot;&gt;TOM&lt;/span&gt; &lt;/td&gt;
		&lt;td&gt;⌃ + S &lt;span class=&quot;caps&quot;&gt;TOM&lt;/span&gt;  &lt;/td&gt;
		&lt;td&gt; /Tom &lt;br /&gt;
&lt;em&gt;Then press they enter key and then you can press n or N repeatedly to continue searching up or down&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search file upwards for &lt;span class=&quot;caps&quot;&gt;TOM&lt;/span&gt; &lt;/td&gt;
		&lt;td&gt; ⇧ + ⌃ + S &lt;span class=&quot;caps&quot;&gt;TOM&lt;/span&gt; &lt;/td&gt;
		&lt;td&gt; ?&lt;span class=&quot;caps&quot;&gt;TOM&lt;/span&gt; &lt;br /&gt;
&lt;em&gt;As above, n or N continue searching up or down&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Full screen &lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;https://github.com/enormego/EGOTextMateFullScreen&quot;&gt;(Lion Only)&lt;/a&gt; &lt;/td&gt;
		&lt;td&gt; ⌘ + Enter &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search entire project &lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + F &lt;/td&gt;
		&lt;td&gt; ,a THING_SEARCHING_FOR (ack) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Find a specific method&lt;/td&gt;
		&lt;td&gt;⌘ + ⇧ + t&lt;/td&gt;
		&lt;td&gt; /def foo &lt;br /&gt;
&lt;em&gt;then use * to cycle through instances of the method name under the caret. This will not necessarily by definition # does the same but in the oppose direction&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Replacing Text in Files and in Entire Project&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file&lt;/td&gt;
		&lt;td&gt; ⌘ F &lt;br /&gt;
&lt;em&gt;Find and replace box where you select &amp;#8216;Replace All&amp;#8217;.&lt;/em&gt; &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/g &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file, ignoring case &lt;/td&gt;
		&lt;td&gt; ⌘ F&lt;br /&gt;
 &lt;em&gt;Find and replace dialogue where you then select &amp;#8216;Ignore Case&amp;#8217;and then &amp;#8216;Replace All&amp;#8217;.&lt;/em&gt; &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/gi &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file, confirming each time &lt;/td&gt;
		&lt;td&gt; ⌘ F &lt;br /&gt;
&lt;em&gt;Find and replace box where you select &amp;#8216;Replace Next&amp;#8217;.&lt;/em&gt; &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/gc &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in entire project&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + F &lt;/td&gt;
		&lt;td&gt; :Ack donut[Enter]. A window pops up with all instances of the term. &lt;Tab&gt; into the ack search window. Type :bufdo %s/donut/eclair/gce. :q the ack search window once down to close it.&lt;br /&gt;
&lt;em&gt;Save current file first if &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; throws an error&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in entire project&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + F &lt;/td&gt;
		&lt;td&gt; ,a donut[Enter] &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Ruby On Rails&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Nearly all of this functionality is thanks to Tpope&amp;#8217;s &lt;a href=&quot;https://github.com/tpope/vim-rails&quot;&gt;Rails.vim plugin&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Call Ruby On Rails generate script &lt;/td&gt;
		&lt;td&gt; &amp;quot;⌃ + Pipe [1..8]== &lt;/td&gt;
		&lt;td&gt;:Rgenerate [controller model scaffold] Blog &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go To Last Migration&lt;/td&gt;
		&lt;td&gt; None &lt;/td&gt;
		&lt;td&gt; :Rmig  &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run migrations&lt;/td&gt;
		&lt;td&gt; ⌃ + ⇧ + Pipe &lt;/td&gt;
		&lt;td&gt;[when in a migration] :Rake &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch focus to project drawer&lt;/td&gt;
		&lt;td&gt; ⌘ + ⌥ + ` (check)&lt;/td&gt;
		&lt;td&gt; ⌃ + w ⌃ + w &lt;br /&gt;
&lt;em&gt;A good key remapping is to map this onto tab by adding this to your vimrc: noremap &lt;tab&gt; &lt;C-w&gt;&lt;C-w&gt;&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Insert erb&amp;#8217;s &amp;lt;%= &lt;/td&gt;
		&lt;td&gt; ⌃ + ⇧ + . &lt;/td&gt;
		&lt;td&gt; Type text you want to surround first and place caret some inside. yss= &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Insert erb&amp;#8217;s &amp;lt;% &lt;/td&gt;
		&lt;td&gt; ⌃ + ⇧ + . &lt;/td&gt;
		&lt;td&gt; yss- &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run unit test caret inside of &lt;/td&gt;
		&lt;td&gt; ⇧ + ⌘ + R &lt;/td&gt;
		&lt;td&gt; :.Rake &lt;br /&gt;
&lt;em&gt;. here represents the current line. You can substitute this for other lines e.g. :40Rake&lt;/em&gt; &lt;span class=&quot;caps&quot;&gt;TEST&lt;/span&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to test file (e.g. from user.rb to user_spec.rb)&lt;/td&gt;
		&lt;td&gt; ⌥ + ⇧  + ⌘ + ↓ &lt;/td&gt;
		&lt;td&gt; :A (:AV in a new split, :AT new tab)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Find related file&lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + ↓ &lt;/td&gt;
		&lt;td&gt; :R&lt;br /&gt;
&lt;em&gt;If typed within the Controller you&amp;#8217;ll be brought to the View corresponding to the method selected; If typed in view &amp;#8594; Controller; Migrations &amp;#8594; Next Migration; Typed in Model &amp;#8594; Schema. For something more precise see the following &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; only commands&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to related controller&lt;/td&gt;
		&lt;td&gt; ⌥ + ⇧ + ⌘ + ↓ &lt;/td&gt;
		&lt;td&gt; :Rco &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to related helper&lt;/td&gt;
		&lt;td&gt; As above &lt;/td&gt;
		&lt;td&gt; :Rhe &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to model under cursor&lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; gf [e.g. you see Pos*t.first &amp;#8594; brought to #post.rb &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to stylesheet under cursor&lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; gf [e.g. you see&amp;lt;%= stylesheet_link_tag &amp;#8216;scaf*fold&amp;#8217; %&amp;gt;&amp;#8594; brought to scaffold.css &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;View Rails logs&lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; :Rlogs &lt;br /&gt;
&lt;em&gt;:Rake logs:clear if takes too long to load&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to layout under cursor&lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; gf &lt;br /&gt;
&lt;em&gt;e.g. you see layout :print &amp;#8594; brought to #print.html.erb&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to application.rb&lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; :Renv&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to test.rb &lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; :Renv t[tab to autofill out to test]&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to controller from link under cursor&lt;/td&gt;
		&lt;td&gt; No equivalent&lt;/td&gt;
		&lt;td&gt; gf [e.g. you see &amp;lt;%= link_to &amp;#8220;New&amp;#8221;, new_comme*nt_path %&amp;gt; &amp;#8594; brought to #comments_controller.rb &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Create a posts controller &lt;/td&gt;
		&lt;td&gt; No equivalent &lt;/td&gt;
		&lt;td&gt;:Rco posts! &lt;br /&gt;
&lt;em&gt;Note the exclamation mark which distinguishes this create command from the find command.&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Extract to partial&lt;/td&gt;
		&lt;td&gt; [Select text] ⌃ + H &lt;/td&gt;
		&lt;td&gt; [Select text] :Rextract PARTIAL_NAME &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Indentation&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Automatically indent code beautifully on whole file &lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + B (&lt;a href=&quot;https://github.com/mocoso/code-beautifier.tmbundle&quot;&gt;Code Beautifier Plugin&lt;/a&gt;) &lt;/td&gt;
		&lt;td&gt; gg=G &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Fix indentation on selected area &lt;/td&gt;
		&lt;td&gt; No equivalent &lt;/td&gt;
		&lt;td&gt; = &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Fix indentation on a single line &lt;/td&gt;
		&lt;td&gt; No equivalent &lt;/td&gt;
		&lt;td&gt; == &lt;br /&gt;
&lt;em&gt;Compare with the above to note a pattern. Type a command once to apply it to visually selected areas. Type it twice to apply to the current line, which need not be selected. See also d and dd, y and yy&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Indent&lt;/td&gt;
		&lt;td&gt;⌘ + [ &lt;/td&gt;
		&lt;td&gt; &amp;gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Unindent&lt;/td&gt;
		&lt;td&gt; ⌘ + ] &lt;/td&gt;
		&lt;td&gt; &amp;lt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Font Size, Line Numberings&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Bigger/Smaller Font&lt;/td&gt;
		&lt;td&gt; ⌘ +/- &lt;/td&gt;
		&lt;td&gt;  [~/gvimrc.local] set guifont=Monaco:h18 &lt;br /&gt;
&lt;em&gt;You can replace 18 here with your desired font-size&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;[Note that you can try this command out by typing it into a live &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; session just by preceding it with a :, e.g. :set&amp;#8230;..&lt;/em&gt;&lt;br /&gt;
_Using ⌘ +/- in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; makes the screen scale disproportionately &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Line numbering&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + L&lt;/td&gt;
		&lt;td&gt; :set number &lt;br /&gt;
&lt;em&gt;Turn on&lt;/em&gt;&lt;br /&gt;
:set nonumber &lt;br /&gt;
&lt;em&gt;Turn off&lt;/em&gt;. &lt;br /&gt;
&lt;em&gt;Note the symmetry between turning the number on and off, the only different being the preceded &amp;#8220;no&amp;#8221;. This is the same for all &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; set commands. As with other preferences this may be placed in vimrc.local&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Spell Checking&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Highlight incorrect spellings&lt;/td&gt;
		&lt;td&gt; ⌥ + ⌘ + ; &lt;/td&gt;
		&lt;td&gt; :set spell &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Next incorrect spelling &lt;/td&gt;
		&lt;td&gt; ⌘ + : &lt;/td&gt;
		&lt;td&gt; [Assuming you&amp;#8217;ve enabled spell checking and can see highlighter errors] ] s &lt;br /&gt;
&lt;em&gt;Go to previous spelling error with [s&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Suggest correct spelling&lt;/td&gt;
		&lt;td&gt; Double click and select best spelling &lt;/td&gt;
		&lt;td&gt; z= &lt;br /&gt;
&lt;em&gt;Then choose the correct spelling from drop down menu&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Bookmarks&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Add bookmark&lt;/td&gt;
		&lt;td&gt; ⌘ + F2 (Never worked on my mac) &lt;/td&gt;
		&lt;td&gt; m[a-z] &lt;br /&gt;
&lt;em&gt;The letter in the range refers to this bookmark&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump to bookmark&lt;/td&gt;
		&lt;td&gt; F2 (next) + F2 (previous) &lt;/td&gt;
		&lt;td&gt; &amp;#8217;a &lt;br /&gt;
&lt;em&gt;Where a is a bookmark previously set. Type :marks to see all bookmarks&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Uppercase/Lowercase&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Upcase selected text&lt;/td&gt;
		&lt;td&gt;⌃ + ⇧ + U&lt;/td&gt;
		&lt;td&gt; u &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Downcase selected text&lt;/td&gt;
		&lt;td&gt;⌃ + ⇧ + U&lt;/td&gt;
		&lt;td&gt; U &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switchcase of selected text &lt;/td&gt;
		&lt;td&gt; ⌃ + g &lt;/td&gt;
		&lt;td&gt; ~ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Titlecase current text&lt;/td&gt;
		&lt;td&gt; ⌃ + ⌥ + U &lt;/td&gt;
		&lt;td&gt; No exact equivalent &lt;br /&gt;
&lt;em&gt;To titlecase the current line you can use :s :s/\&amp;lt;\(\w\)\(\w*\)\&amp;gt;/\u\1\L\2/g&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Auto-complete&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;All of the following commands assume you are in insert mode&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Auto-complete method&lt;/td&gt;
		&lt;td&gt; ⎋ after typing first few letters&lt;/td&gt;
		&lt;td&gt; Tab after typing first few letters&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Auto-complete filename&lt;/td&gt;
		&lt;td&gt; No equivalent &lt;/td&gt;
		&lt;td&gt; ⌃ + X ⌃ + F &lt;br /&gt;
&lt;em&gt;Only fills one directory at a time so you&amp;#8217;ll need to repeat for each additional one&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Auto-complete full line of code &lt;/td&gt;
		&lt;td&gt; No equivalent &lt;/td&gt;
		&lt;td&gt; ⌃ + X + l &lt;/td&gt;
&lt;/table&gt;
&lt;h2&gt;Commenting Code&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Comment Line or Selection&lt;/td&gt;
		&lt;td&gt; ⌘ + / &lt;/td&gt;
		&lt;td&gt; ⌘ + / &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Syntax Errors&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Check for syntax errors on saving (*life saver)&lt;/td&gt;
		&lt;td&gt; &lt;a href=&quot;https://github.com/sxtxixtxcxh/validate-on-save.tmbundle&quot;&gt;Validate On Save Plugin&lt;/a&gt; &lt;/td&gt;
		&lt;td&gt; Built In &lt;br /&gt;
&lt;em&gt;A grey bar appears right of the number column with an &amp;gt; beside the error&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Auto-closing Quotes, Html Tags, Brackets.&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;All of the following commands assume you are in insert mode&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Add opposing bracket or quotation mark&lt;/td&gt;
		&lt;td&gt; Typing a &amp;quot; will automatically add in closing. &lt;/td&gt;
		&lt;td&gt; Add &lt;a href=&quot;https://gist.github.com/1193298&quot;&gt;this gist&lt;/a&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Close current html tag&lt;/td&gt;
		&lt;td&gt;⌘ + ⌥ + .&lt;/td&gt;
		&lt;td&gt; ⌃ + x + / &lt;em&gt;Also you have auto tag creation. To create &lt;p&gt;&lt;/p&gt; type p then  ⌃ + X Spacebar&lt;/em&gt; &lt;br /&gt;
&lt;em&gt;Assumes you have the following in your ~/.janus.rake file:&lt;br /&gt;
vim_plugin&lt;/em&gt;task &amp;#8220;ragtag&amp;#8221;, &amp;#8220;git://github.com/tpope/vim-ragtag.git&amp;#8221;&lt;br /&gt;
_ &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; Colours&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;View &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; colour wheel&lt;/td&gt;
		&lt;td&gt; ⌘ + ⇧ + C &lt;/td&gt;
		&lt;td&gt; No exact equivalent.  vim_plugin_task &amp;#8220;vim-css-color&amp;#8221;, &amp;#8216;git://github.com/skammer/vim-css-color.git&amp;#8217; turns #acbdef into its correct colour&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Running Tests and Files&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Run tests for given file&lt;/td&gt;
		&lt;td&gt;⌘ + r &lt;/td&gt;
		&lt;td&gt; :Rake &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run current file&lt;/td&gt;
		&lt;td&gt; ⌘ + R &lt;/td&gt;
		&lt;td&gt; :!ruby % &lt;br /&gt;
&lt;em&gt;Explanation: :! means execute what follows as if in shell. % expands to the current_file_name so you are executing `ruby current_file_name. This runs in a buffer in &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; making you unable to continue editing.&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Snippets&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Snippets (e.g. validates present of)&lt;/td&gt;
		&lt;td&gt; vp + &lt;span class=&quot;caps&quot;&gt;TAB&lt;/span&gt; &lt;/td&gt;
		&lt;td&gt; vp ⌃ + ] &lt;br /&gt;
&lt;em&gt;Abbreviations same as in Textmate&lt;/em&gt; &lt;br /&gt;
&lt;em&gt;Non Rails snippets not working since the latest releases of snippets plugin clashes with Command-T search plugin. I&amp;#8217;ve filed bug reports and if anyone has fixed this let me know.&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;See All Available Snippers&lt;/td&gt;
		&lt;td&gt; Use Menu &lt;/td&gt;
		&lt;td&gt;:Rabbrev&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Syntax Highlighting&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Set syntax highlighting to (e.g.) textile&lt;/td&gt;
		&lt;td&gt; Varies depending on highlighter. Select manually at the bottom of the screen. &lt;/td&gt;
		&lt;td&gt; :set syntax=textile &lt;br /&gt;
&lt;em&gt;You probably won&amp;#8217;t need this since &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; will automatically figure out the appropriate syntax highlighter.&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Turn on syntax highlighting&lt;/td&gt;
		&lt;td&gt; No option to enable/disable &lt;/td&gt;
		&lt;td&gt; :syntax on&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Turn off syntax highlighting&lt;/td&gt;
		&lt;td&gt; No option &lt;/td&gt;
		&lt;td&gt; :syntax off&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Formatting&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Reformat selection to according to wrap settings &lt;/td&gt;
		&lt;td&gt;⌃Q &lt;/td&gt;
		&lt;td&gt;gq &lt;em&gt;gqgq, i.e. the command twice, to reformat the current line&lt;/em&gt;&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Other&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Duplicate line/selection&lt;/td&gt;
		&lt;td&gt; ⌃ + ⇧ + D&lt;/td&gt;
		&lt;td&gt; yyp &lt;br /&gt;
&lt;em&gt;y copies line then p pastes in below.&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Add placeholder text&lt;/td&gt;
		&lt;td&gt;lorem + tab&lt;/td&gt;
		&lt;td&gt; lorem + enter&lt;br /&gt;
&lt;em&gt;Assumes you have add the following to your vimrc.local:&lt;br /&gt;
&amp;quot; anytime &amp;#8216;lorem&amp;#8217; is typed in, replace it with placeholder text&lt;br /&gt;
abbr lorem Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras a ornare metus. In justo metus, auctor nec semper in, laoreet porttitor augue. Maecenas tortor libero, dignissim vel placerat sit amet, malesuada ut quam. Curabitur vitae velit lacus, sed imperdiet sapien. Sed posuere, odio nec pharetra adipiscing&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Overwrite Mode&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌥ + O &lt;br /&gt;
&lt;em&gt;Then start typing text&lt;/em&gt; &lt;/td&gt;
		&lt;td&gt; R &lt;br /&gt;
&lt;em&gt;Then start typing text&lt;/em&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Edit ends of selected lines&lt;/td&gt;
		&lt;td&gt;⌘ + ⌥ + a&lt;/td&gt;
		&lt;td&gt; &lt;br /&gt;
⌃ + V to enter &lt;span class=&quot;caps&quot;&gt;VISUAL&lt;/span&gt;-&lt;span class=&quot;caps&quot;&gt;BLOCK&lt;/span&gt; mode&lt;br /&gt;
select your lines&lt;br /&gt;
$ to go to the end of the selection&lt;br /&gt;
A to enter &lt;span class=&quot;caps&quot;&gt;EDIT&lt;/span&gt; mode at the end&lt;br /&gt;
⎋ when you are finished_ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt; Edit start of selected lines&lt;/td&gt;
		&lt;td&gt; No equivalent &lt;/td&gt;
		&lt;td&gt; Sane as above, except you press I instead of A&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Wrap selected text in P tags&lt;/td&gt;
		&lt;td&gt; ⇧ + ⌃ + W &lt;/td&gt;
		&lt;td&gt; ystp &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Help&lt;/h2&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Search help for &amp;#8216;grep&amp;#8217;&lt;/td&gt;
		&lt;td&gt;Click help menu and search for help&lt;/td&gt;
		&lt;td&gt;:help grep&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;h2&gt;Email Me If I Left Something Out&lt;/h2&gt;
&lt;p&gt;Or if you can find a more idiomatic way of doing any of the above commands.&lt;/p&gt;
&lt;h2 id=&quot;vim_training_resources&quot;&gt;Recommended Resources For Learning Basic &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Remember the key is to train your fingers. Don&amp;#8217;t just read the text; open up a blank file and try out different commands. If you want to get good at &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; you need to have the confidence to tear a file to pieces your training sessions.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.derekwyatt.org/vim/vim-tutorial-videos/&quot; title=&quot;Highly recommended, if you can tolerate his excitement&quot;&gt;Derek Wyatt&amp;#8217;s Video Series&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://alfmikula.blogspot.com/2010/11/using-spaced-repetition-software-to.html&quot; title=&quot;My Personal Favourite&quot;&gt;Spaced Repetition Systems For Drilling&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://stevelosh.com/blog/2010/09/coming-home-to-vim/&quot;&gt;Coming Home To Vim&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.viemu.com/a_vi_vim_graphical_cheat_sheet_tutorial.html&quot;&gt;Visual Cheat Sheets&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://vimregex.com/&quot;&gt;Regular expressions in Vim&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://peepcode.com/products/smash-into-vim-i&quot; title=&quot;Commercial&quot;&gt;PeepCode&amp;#8217;s Video Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
</feed>
