<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Jack Kinsella</title>
 <link href="http://www.jackinsella.ie/atom.xml" rel="self"/>
 <link href="http://www.jackkinsella.ie/"/>
 <updated>2011-09-04T17:27:19+01:00</updated>
 <id>http://www.jackkinsella.ie/</id>
 <author>
   <name>Jack Kinsella</name>
 </author>

 
 <entry>
   <title>Textmate to Vim</title>
   <link href="http://www.jackkinsella.ie/2011/09/05/textmate-to-vim.html"/>
   <updated>2011-09-05T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2011/09/05/textmate-to-vim</id>
   <content type="html">&lt;p&gt;Assumptions:&lt;br /&gt;
1) You&amp;#8217;re using a Mac&lt;br /&gt;
2) You&amp;#8217;ve installed Janus&lt;br /&gt;
3) You are in Normal Mode for all commands unless specified&lt;br /&gt;
4) Key 1 + Key 2 means both at same time | kw means k followed quickly by w|&lt;/p&gt;
&lt;p&gt;Sometimes you will need to create customer commands in ~/.vimrc.local anything you place. To save yourself this just download my own version.&lt;/p&gt;
&lt;p&gt;Somtimes you will need to install extra plugins. These go in your janus.rake file&lt;/p&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Command&lt;/td&gt;
		&lt;td&gt; Textmate&lt;/td&gt;
		&lt;td&gt; Vim&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Open project from command line&lt;/td&gt;
		&lt;td&gt; [in folder] mate. &lt;/td&gt;
		&lt;td&gt; [in folder] mvim .&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to beginning of line&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + A &lt;/td&gt;
		&lt;td&gt; ^ &lt;/td&gt;
		&lt;td&gt; &lt;br /&gt;
|Go to end of line &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + E &lt;/td&gt;
		&lt;td&gt; $ &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to top of file &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Up &lt;/td&gt;
		&lt;td&gt; g &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to bottom of file &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Down &lt;/td&gt;
		&lt;td&gt; GG &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move up one line (with Carret at same position)&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + P &lt;/td&gt;
		&lt;td&gt; k &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move down one line (with Carret at same position)&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CNRL&lt;/span&gt; + N&lt;/td&gt;
		&lt;td&gt; j&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search file downwards&lt;/td&gt;
		&lt;td&gt;&lt;code&gt;&amp;lt;Ctrl&amp;gt; + S then type method name&lt;/code&gt;&lt;/td&gt;
		&lt;td&gt;&lt;code&gt;/def donught&lt;/code&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search file upwards &lt;/td&gt;
		&lt;td&gt; Shift + &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + S THING_SEARCHING_FOR &lt;/td&gt;
		&lt;td&gt; ?THING_SEARCHING_FOR &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Full screen &lt;/td&gt;
		&lt;td&gt; (Lion Only) https://github.com/enormego/EGOTextMateFullScreen &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Enter &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Search entire project &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Shift + F (grep) &lt;/td&gt;
		&lt;td&gt; ,a THING_SEARCHING_FOR (ack) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to line&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + L 20 &lt;/td&gt;
		&lt;td&gt; :20 &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Delete line&lt;/td&gt;
		&lt;td&gt;cmd + shift + k &lt;/td&gt;
		&lt;td&gt; dd &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Automatically indent code beautifully&lt;/td&gt;
		&lt;td&gt; Alt + &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + B (Code Beautifier https://github.com/mocoso/code-beautifier.tmbundle) &lt;/td&gt;
		&lt;td&gt; gg=G &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Check for syntax errors on saving (*life saver)&lt;/td&gt;
		&lt;td&gt; Validate On Save Plugin https://github.com/sxtxixtxcxh/validate-on-save.tmbundle &lt;/td&gt;
		&lt;td&gt; Built In (A grey bar appears right of the number column with an &amp;gt; beside the error) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run tests for given file&lt;/td&gt;
		&lt;td&gt;cmd + r &lt;/td&gt;
		&lt;td&gt; :Rake &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run current file&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + R &lt;/td&gt;
		&lt;td&gt; No equivalent. Must do it manually. :!ruby % (explanation: :! means execute the following as if on a shell. ruby % expands to &amp;#8216;ruby current_file_name&amp;#8217;) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go To Last Migration&lt;/td&gt;
		&lt;td&gt; None &lt;/td&gt;
		&lt;td&gt; :Rmig  &lt;/td&gt;
		&lt;td&gt; &lt;br /&gt;
Add opposing bracket or quotation mark&lt;/td&gt;
		&lt;td&gt; Typing a &amp;quot; will automatically add in closing. &lt;/td&gt;
		&lt;td&gt; Type let g:AutoClosePairs = {&amp;#8217;(&amp;#8216;: &amp;#8217;)&amp;#8217;, &amp;#8216;{&amp;#8217;: &amp;#8216;}&amp;#8217;, &amp;#8216;[&amp;#8217;: &amp;#8216;]&amp;#8217;, &amp;#8216;&amp;quot;&amp;#8217;: &amp;#8216;&amp;quot;&amp;#8217;, &amp;#8220;&amp;#8217;&amp;#8221;: &amp;#8220;&amp;#8217;&amp;#8221;, &amp;#8216;#{&amp;#8217;: &amp;#8216;}&amp;#8217;, &amp;#8217;&lt;/td&gt;
		&lt;td&gt;&amp;#8216;:&amp;#8217;&lt;/td&gt;
		&lt;td&gt;&amp;#8217; } or place these lines in your vimrc.local file let g:AutoCloseProtectedRegions = [&amp;#8220;Character&amp;#8221;] Add vim_plugin_task &amp;#8220;autoclose&amp;#8221;, &amp;#8220;git://github.com/Townk/vim-autoclose.git&amp;#8221;&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Close current html tag&lt;/td&gt;
		&lt;td&gt;cmd + alt + .&lt;/td&gt;
		&lt;td&gt; vim_plugin_task &amp;#8220;ragtag&amp;#8221;, &amp;#8220;git://github.com/tpope/vim-ragtag.git&amp;#8221; p &lt;span class=&quot;caps&quot;&gt;CNRL&lt;/span&gt; + X Space &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;View &lt;span class=&quot;caps&quot;&gt;CSS&lt;/span&gt; colour wheel&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + C &lt;/td&gt;
		&lt;td&gt; No exact equivalent.  vim_plugin_task &amp;#8220;vim-css-color&amp;#8221;, &amp;#8216;git://github.com/skammer/vim-css-color.git&amp;#8217; turns #acbdef into its correct colour&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Call RoR generate script&lt;/td&gt;
		&lt;td&gt; cntrl + \&lt;/td&gt;
		&lt;td&gt; [1..8]&lt;/td&gt;
		&lt;td&gt; :Rgenerate [controller model scaffold] Blog &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch focus to project drawer&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;ALT&lt;/span&gt; + ` (check)&lt;/td&gt;
		&lt;td&gt; &lt;CTRL&gt; + w &lt;CTRL&gt; + w OR &lt;span class=&quot;caps&quot;&gt;VIMRC&lt;/span&gt; noremap &lt;tab&gt; &lt;C-w&gt;&lt;C-w&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Insert erb&amp;#8217;s &amp;lt;%= &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CNTRL&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + . &lt;/td&gt;
		&lt;td&gt; yss= (after text on screen type this to surround line with tags) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Insert erb&amp;#8217;s &amp;lt;% &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CNTRL&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;SHIT&lt;/span&gt; + . (cycle through )&lt;/td&gt;
		&lt;td&gt; yss- &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run unit test caret inside of &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + R &lt;/td&gt;
		&lt;td&gt; :.Rake (. here represent current line. Substitute for other lines) &lt;span class=&quot;caps&quot;&gt;TEST&lt;/span&gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump between words left&lt;/td&gt;
		&lt;td&gt; Alt + Left &lt;/td&gt;
		&lt;td&gt; w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump between words right&lt;/td&gt;
		&lt;td&gt; Alt + Right &lt;/td&gt;
		&lt;td&gt; b &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;New tab&lt;/td&gt;
		&lt;td&gt; Click On File In Project Drawer &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Shit + T &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Drop tab&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + w &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + w &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch tabs left &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;COMMAND&lt;/span&gt; + [ (left) ] &lt;/td&gt;
		&lt;td&gt; :tabp &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Switch tabs right &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;COMMAND&lt;/span&gt; + right &lt;/td&gt;
		&lt;td&gt; :tabn &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to tab&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt;[1-9] &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt;[1-9]&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; F (Find and Replace Dialogue) Replace All &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/g &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file, ignoring case &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; F (Find and Replace Dialogue) Select &amp;#8216;Ignroe Case&amp;#8217;. Replace All &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/gi &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Replace all &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in file, confirming each time &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; F (Find and Replace Dialogue) Replace Next &lt;/td&gt;
		&lt;td&gt; :%s/donut/eclair/gc &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;&lt;/td&gt;
		&lt;td&gt;Replace &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in entire project&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Shift + F &lt;/td&gt;
		&lt;td&gt; (Save first if issues) ,a donut[Enter]. A window pops up with all instances of the term. &lt;Tab&gt; into the ack search window. Type :bufdo %s/donut/eclair/gce. :q the ack search window once down to close it. &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Save file&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + S &lt;/td&gt;
		&lt;td&gt; :wReplace &amp;#8220;donut&amp;#8221; with &amp;#8220;eclair&amp;#8221; in entire project&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Shift + F &lt;/td&gt;
		&lt;td&gt; ,a donut[Enter] &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Save file as&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Shift + S &lt;/td&gt;
		&lt;td&gt; :saveas &lt;span class=&quot;caps&quot;&gt;NEWNAME&lt;/span&gt; &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Create new file&lt;/td&gt;
		&lt;td&gt; File &amp;gt; new &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + T (new tab); type; :w newfilename &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Select all&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + A &lt;/td&gt;
		&lt;td&gt; vgg=G &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Increase selection left one word&lt;/td&gt;
		&lt;td&gt; Shift + Alt + Left then alt + left for each additional word&lt;/td&gt;
		&lt;td&gt; v(select)w then w for each additional word  &lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
&lt;table&gt;
	&lt;tr&gt;
		&lt;td&gt;Autocomplete method&lt;/td&gt;
		&lt;td&gt; &lt;ESC&gt; after typing first few letters&lt;/td&gt;
		&lt;td&gt; &lt;TAB&gt; after first few letters&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Autocomplete filename&lt;/td&gt;
		&lt;td&gt; Not possible &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + X &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + F (repeat for each directory)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Merge current line With Next Line&lt;/td&gt;
		&lt;td&gt;ctrl+shift+J &lt;/td&gt;
		&lt;td&gt; J &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Find a specific Method&lt;/td&gt;
		&lt;td&gt;cmd + shift + t&lt;/td&gt;
		&lt;td&gt; /def first_letters_of_method_name OR *(while carret of method name to cycle instances of that method in file)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Vertical blocks&lt;/td&gt;
		&lt;td&gt; Alt dragging &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + V &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Duplicate line/selection&lt;/td&gt;
		&lt;td&gt; ctrl-shift-D&lt;/td&gt;
		&lt;td&gt; Yp (y copies line then p pastes in below) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Go to test file (e.g. from user.rb to user_spec.rb)&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;ALT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;SHIT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;DOWN&lt;/span&gt; &lt;/td&gt;
		&lt;td&gt; :A (:AV in a new split, :AT new tab)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Find related file&lt;/td&gt;
		&lt;td&gt; alt-cmd-down &lt;/td&gt;
		&lt;td&gt; :R (If typed in controller &amp;#8594; View(of method selected); If typed in view &amp;#8594; Controller; Migrations &amp;#8594; Next Migration (:A previous migration))&lt;br /&gt;
|Add placeholder text&lt;/td&gt;
		&lt;td&gt;lorem + tab&lt;/td&gt;
		&lt;td&gt; No Equivalent &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Move selected text up&lt;/td&gt;
		&lt;td&gt;cntrl + cmd + up (or down)&lt;/td&gt;
		&lt;td&gt; :m 22 (moves current line to line 22. Easier if line numbers are on with :set number ). Alternativly :m+ or :m+N or :m-N for moving 1 or N lines up or down&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Line numbering&lt;/td&gt;
		&lt;td&gt; Menu Command &lt;/td&gt;
		&lt;td&gt; :set number (on) :set nonumber (off). Note the symmetry. This is the same for all &lt;span class=&quot;caps&quot;&gt;VIM&lt;/span&gt; commands&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Focus on project drawer&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + &lt;Tab&gt; &lt;/td&gt;
		&lt;td&gt; &lt;Tab&gt; (assuming you&amp;#8217;ve set it up. otherwise &lt;span class=&quot;caps&quot;&gt;CNRL&lt;/span&gt; + W/ &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + W)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Rename a file&lt;/td&gt;
		&lt;td&gt;space (whilst focus is on project drawer)&lt;/td&gt;
		&lt;td&gt; Focus On Project Drawer. Select File (search). m (menu appears) m type name of file [enter]. You may need to press r to refresh project drawer (usually happens automatically after a few minutes)&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Open a file&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + 0 &lt;/td&gt;
		&lt;td&gt; :e &lt;span class=&quot;caps&quot;&gt;FILENAME&lt;/span&gt; (use Tab completion after first few letters) [Save File first]&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Run migrations&lt;/td&gt;
		&lt;td&gt;cntl + shift + \&lt;/td&gt;
		&lt;td&gt; &lt;/td&gt;
		&lt;td&gt;:Rmigrate &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Edit ends of selected lines&lt;/td&gt;
		&lt;td&gt;cmd+opt+a&lt;/td&gt;
		&lt;td&gt;&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Highlight incorrect spellings&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;ALT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + ; &lt;/td&gt;
		&lt;td&gt; :set spell &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Next incorrect spelling &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + : &lt;/td&gt;
		&lt;td&gt; ] s (opposite directino with [s) &amp;#8211; assumes spell checking is enabled &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Wrap selected text in P tags&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;CONTROL&lt;/span&gt; + W &lt;/td&gt;
		&lt;td&gt; ystp&lt;br /&gt;
|Upcase selected text&lt;/td&gt;
		&lt;td&gt;&lt;span class=&quot;caps&quot;&gt;CONTROL&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + U&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Titelcase current text&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CONTROL&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;OPTION&lt;/span&gt; + U &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Clipboard history&lt;/td&gt;
		&lt;td&gt;⌘ + &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + V &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Add bookmark&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + F2 (Never worked on my mac) &lt;/td&gt;
		&lt;td&gt; m[a-z] (this letter refers to this bookmark) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Jump to bookmark&lt;/td&gt;
		&lt;td&gt; F2 (next) + F2 (previosu) &lt;/td&gt;
		&lt;td&gt; &amp;#8217;a (:marks to sell all marks)&lt;br /&gt;
|Indent&lt;/td&gt;
		&lt;td&gt;&lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + [ &lt;/td&gt;
		&lt;td&gt; &amp;gt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Unindent&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + ] &lt;/td&gt;
		&lt;td&gt; &amp;lt; &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Sort lines&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;ALT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + R &amp;gt; sort in dialogue box &lt;/td&gt;
		&lt;td&gt; [Text selected] !:sort OR [Text Not Selected] :0,$!sort (0,$ is a range representing whole file) &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Undo&lt;/td&gt;
		&lt;td&gt;&lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Z &lt;/td&gt;
		&lt;td&gt; u &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Redo&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;SHIFT&lt;/span&gt; + &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; + Z &lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CTRL&lt;/span&gt; + R &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr&gt;
		&lt;td&gt;Bigger/Smaller Font&lt;/td&gt;
		&lt;td&gt; &lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; +/- &lt;/td&gt;
		&lt;td&gt; (&lt;span class=&quot;caps&quot;&gt;CMD&lt;/span&gt; +/- doesn&amp;#8217;t work well) &lt;/td&gt;
		&lt;td&gt; set guifont=Monaco:h18 [place in ~/gvimrc.local] (replace 18 with desired font-size)&lt;br /&gt;
|Snippets (e.g. validates present of)&lt;/td&gt;
		&lt;td&gt; vp&lt;Tab&gt; &lt;/td&gt;
		&lt;td&gt; Currently clashes with Command-T since both use T. If anyone can fix this let me know&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;</content>
 </entry>
 
 
</feed>
