---
layout: post
title: Textmate to Vim
subtitle: A guide to using your favourite Textmate features in Vim
/* published: false*/

---
Assumptions:
1) You're using a Mac
2) You've installed Janus
3) You are in Normal Mode for all commands unless specified
4) Key 1 + Key 2 means both at same time | kw means k followed quickly by w|

Sometimes you will need to create customer commands in ~/.vimrc.local anything you place. To save yourself this just download my own version.

Somtimes you will need to install extra plugins. These go in your janus.rake file

|Command| Textmate| Vim|
|Open Project From Command Line| [in folder] mate. | [in folder] mvim .|
|Go To Beginning Of Line| CTRL + A | ^ | 
|Go To End Of Line | CTRL + E | $ |
|Go To Top Of File | CMD + Up | g |
|Go To Bottom Of File | CMD + Down | GG |
|Move Up One Line (with Carret at same position)| CTRL + P | k |
|Move Down One Line (with Carret at same position)| CNRL + N| j|
|Search File Downwards|@<Ctrl> + S then type method name@|@/def donught@|
|Search File Upwards | Shift + CTRL + S THING_SEARCHING_FOR | ?THING_SEARCHING_FOR |
|Full Screen | (Lion Only) https://github.com/enormego/EGOTextMateFullScreen | CMD + Enter |
|Search Entire Project | CMD + Shift + F (grep) | ,a THING_SEARCHING_FOR (ack) |
|Go To Line| CMD + L 20 | :20 |
|Delete Line|cmd + shift + k | dd |
|Automatically Indent Code Beautifully| Alt + CMD + B (Code Beautifier https://github.com/mocoso/code-beautifier.tmbundle) | gg=G |
|Check for Syntax Errors On Saving (*life saver)| Validate On Save Plugin https://github.com/sxtxixtxcxh/validate-on-save.tmbundle | Built In (A grey bar appears right of the number column with an > beside the error) |
|Run Tests For Given File|cmd + r | :Rake |
|Run Current File| CMD + R | No equivalent. Must do it manually. :!ruby % (explanation: :! means execute the following as if on a shell. ruby % expands to 'ruby current_file_name') |
|Go To Last Migration| None | :Rmig  | 
Add opposing bracket or quotation mark| Typing a " will automatically add in closing. | Type let g:AutoClosePairs = {'(': ')', '{': '}', '[': ']', '"': '"', "'": "'", '#{': '}', '|':'|' } or place these lines in your vimrc.local file let g:AutoCloseProtectedRegions = ["Character"] Add vim_plugin_task "autoclose", "git://github.com/Townk/vim-autoclose.git"||
|Close current html tag|cmd + alt + .| vim_plugin_task "ragtag", "git://github.com/tpope/vim-ragtag.git" p CNRL + X Space |
|View CSS Colour Wheel| CMD + SHIFT + C (TEST)|
|Call RoR Generate Script| cntrl + \| |
|Switch Focus To Project Drawer| CMD + ALT + ` (check)|
|Insert Erb's <%= or <% | CNTRL + ^ |
|Jump Between Words Left| Alt + Left
|Jump Between Words Right| Alt + Right 
|New Tab| Click On File In Project Drawer | CMD + Shit + T |
|Drop Tab| CTRL + w | CTRL + w |
|Switch Tabs Left | SHIFT + COMMAND + [ (left) ] | :tabp |
|Switch Tabs Right | SHIFT + COMMAND + right | :tabn |
|Go To Tab| CMD[1-9] | CMD[1-9]|
|Replace all "donut" with "eclair" in file| CMD F (Find and Replace Dialogue) Replace All | :%s/donut/eclair/g |
|Replace all "donut" with "eclair" in file, ignoring case | CMD F (Find and Replace Dialogue) Select 'Ignroe Case'. Replace All | :%s/donut/eclair/gi |
|Replace all "donut" with "eclair" in file, confirming each time | CMD F (Find and Replace Dialogue) Replace Next | :%s/donut/eclair/gc |
||Replace "donut" with "eclair" in entire project| CMD + Shift + F | (Save first if issues) ,a donut[Enter]. A window pops up with all instances of the term. <Tab> into the ack search window. Type :bufdo %s/donut/eclair/gce. :q the ack search window once down to close it. |
|Save File| CMD + S | :wReplace "donut" with "eclair" in entire project| CMD + Shift + F | ,a donut[Enter] |
|Save File As| CMD + Shift + S | :saveas NEWNAME |
|Create New File| File > new | CMD + T (new tab); type; :w newfilename |
|Select All| CMD + A | vgg=G |
|Increase Selection Left One Word| Shift + Alt + Left then alt + left for each additional word| v(select)w then w for each additional word  |
|Autocomplete method|
|Autocomplete filename|
|Merge Current Line With Next Line|ctrl+shift+J
|Find a specific Method|cmd + shift + t|
|Vertical Blocks| Alt dragging |
|Duplicate Line/Selection| ctrl-shift-D|
|Find Related File| alt-cmd-down |
|Select A Word |cntrl + w
|Add Placeholder text|lorem + tab|
|Move Selected Text Up|cntrl + cmd + up (or down)||
|Rename A File|space (whilst focus is on project drawer)|
|Open A File|
|Run Migrations|cntl + shift + |:Rmigrate
|Edit ends of selected lines|cmd+opt+a||
|Select A Word|ctrl+w|
|Spell Checking| CMD + : ??TEST
|Wrap Selected Text in P tags| SHIFT + CONTROL + W |
|Upcase Selected Text|CONTROL + SHIFT + U|
|Titelcase Current Text| CONTROL + OPTION + U |
|Clipboard History|âŒ˜ + SHIFT + V |
|Add Bookmark| CMD + F2 TEST
|Next Bookmark| F2 |
|Previous Bookmark| shift + F2 |
|indent|CMD + [
|unindent| CMD + ]
|sort lines| F5
|undo|CMD + Z
|Bigger/Smaller Font| CMD + /-
|redo| CMD + SHIFT + Z

|Snippets|
||
